name: 'Setup LocalStack'
description: 'Sets up LocalStack CLI in your GitHub Actions workflow.'
author: 'LocalStack Team'

branding:
  icon: 'code'
  color: 'white'

inputs:
  image-tag:
    description: 'Tag of the LocalStack Docker image to use'
    required: true
    default: 'latest'
  install-awslocal:
    description: 'Whether to install the `awslocal` CLI into the environment'
    required: true
    default: 'true'
  use-pro:
    description: 'Whether to use LocalStack Pro (requires a valid API key)'
    required: false
    default: 'false'
  configuration:
    description: 'Configuration variables to use for LocalStack'
    required: false
    default: ''
  ci-project:
    description: 'Name of the CI project to track in LocalStack Cloud'
    required: false
    default: ''
  github-token:
    description: 'Github token used to create PR comments'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Prepare LocalStack Build
      uses: LocalStack/setup-localstack/prepare@pr-integration
      if: inputs.ci-project && inputs.github-token
      with:
        github-token: ${{ inputs.github-token }}
        ci-project: ${{ inputs.ci-project }}
    - name: Finish LocalStack Build
      uses: LocalStack/setup-localstack/finish@pr-integration
      if: inputs.github-token
      with:
        github-token: ${{ inputs.github-token }}
        ci-project: ${{ inputs.ci-project }}

    - run: |
        pip install pyopenssl -U

        if [ "$USE_PRO" = true ]; then
          docker pull localstack/localstack-pro:"$IMAGE_TAG"
          CONFIGURATION="$CONFIGURATION DNS_ADDRESS=0"
        else
          docker pull localstack/localstack:"$IMAGE_TAG"
        fi

        pip install localstack
        eval "${CONFIGURATION} localstack start -d"

        localstack wait -t 30
        if [ "$INSTALL_AWSLOCAL" = true ]; then
          pip install awscli-local[ver1]
        fi
      shell: bash
      env:
        IMAGE_TAG: "${{ inputs.image-tag }}"
        INSTALL_AWSLOCAL: "${{ inputs.install-awslocal }}"
        USE_PRO: "${{ inputs.use-pro }}"
        CONFIGURATION: "${{ inputs.configuration }}"
